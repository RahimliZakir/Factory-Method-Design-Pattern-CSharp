- The software design pattern was introduced by four authors known as the Gang of Four, who published a book titled “Elements of Reusable Object-Oriented Software” which became so popular.

- Factory Method Design Pattern
Factory method is a creational design pattern which solves the problem of creating product objects without specifying their concrete classes.

- Why do you need a factory method?
• Factories can make your code flexible by reducing too many conditional statements (if...else).
• Factories enforce SRP. If you are not familiar with the SOLID principle, you should do your research on it, but it is not mandatory for design patterns.
• Factories also help you avoid tight coupling codes.
• Factories enforce the Open/Closed principle: You can create new products without breaking existing client code.
• Factories help you avoid rebuilding your code anytime there are requirement changes; you just reuse objects.

- Participants
The classes and objects participating in this pattern include:
• Product  (Page) - defines the interface of objects the factory method creates
• ConcreteProduct  (SkillsPage, EducationPage, ExperiencePage) - implements the Product interface
• Creator  (Document) - declares the factory method, which returns an object of type Product. Creator may also define a default implementation of the factory method that returns a default ConcreteProduct object.
  May call the factory method to create a Product object.
• ConcreteCreator  (Report, Resume) - overrides the factory method to return an instance of a ConcreteProduct.